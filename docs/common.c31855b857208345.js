"use strict";(self.webpackChunk_1PF_Soto=self.webpackChunk_1PF_Soto||[]).push([[76],{8769:(c,l,s)=>{s.d(l,{f:()=>o});var r=s(274),u=s(3587),a=s(7705),n=s(1626);let o=(()=>{class e{constructor(t){this.httpClient=t,this.baseUrl=u.c.apiBaseUrl}getCourses(){return this.httpClient.get(`${this.baseUrl}/courses`)}removeCoursesById(t){return this.httpClient.delete(`${this.baseUrl}/courses/${t}`).pipe((0,r.H)(()=>this.getCourses()))}updateCoursesById(t,i){return this.httpClient.patch(`${this.baseUrl}/courses/${t}`,i).pipe((0,r.H)(()=>this.getCourses()))}addCourses(t){return this.httpClient.post(`${this.baseUrl}/courses`,{...t})}getCourseById(t){return this.httpClient.get(`${this.baseUrl}/courses/${t}`)}static{this.\u0275fac=function(i){return new(i||e)(a.KVO(n.Qq))}}static{this.\u0275prov=a.jDH({token:e,factory:e.\u0275fac,providedIn:"root"})}}return e})()},600:(c,l,s)=>{s.d(l,{I:()=>o});var r=s(274),u=s(3587),a=s(7705),n=s(1626);let o=(()=>{class e{constructor(t){this.httpClient=t,this.baseUrl=u.c.apiBaseUrl}getStudents(){return this.httpClient.get(`${this.baseUrl}/students`)}removeStudentById(t){return this.httpClient.delete(`${this.baseUrl}/students/${t}`).pipe((0,r.H)(()=>this.getStudents()))}updateStudentById(t,i){return this.httpClient.patch(`${this.baseUrl}/students/${t}`,i).pipe((0,r.H)(()=>this.getStudents()))}addStudent(t){return this.httpClient.post(`${this.baseUrl}/students`,{...t,createdAt:(new Date).toISOString()})}getStudentsBy(t){return this.httpClient.get(`${this.baseUrl}/students/${t}`)}static{this.\u0275fac=function(i){return new(i||e)(a.KVO(n.Qq))}}static{this.\u0275prov=a.jDH({token:e,factory:e.\u0275fac,providedIn:"root"})}}return e})()},5177:(c,l,s)=>{s.d(l,{F:()=>r});let r=(()=>{class u{static{this.errorMessages={required:"Este campo es requerido",email:"El formato del correo es incorrecto",minlength:"Ingresa m\xe1s caracteres",maxlength:"Se super\xf3 el m\xe1ximo de caracteres",pattern:"No ingresar n\xfameros"}}static getErrorMessage(n,o){const e=n.get(o);if(e&&e.errors)for(const h in e.errors)return this.errorMessages[h];return""}static hasError(n,o){const e=n.get(o);return(e?.invalid??!1)&&(e?.dirty||e?.touched||!1)}}return u})()}}]);